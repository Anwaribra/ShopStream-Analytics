
services:
  airflow-init:
    image: apache/airflow:3.0.6
    container_name: airflow-init-shopstream
    entrypoint: /bin/bash
    command: -c "airflow db migrate"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:2003@host.docker.internal:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_USERS=admin:admin,viewer:viewer
    volumes:
     - ./airflow/dags:/opt/airflow/dags
      - "D:/Projects/ShopStream Analytics/airflow/dags:/opt/airflow/dags"
      - "D:/Projects/ShopStream Analytics/airflow/dags/simple_test_dag.py:/opt/airflow/dags/simple_test_dag.py"
      - "D:/Projects/ShopStream Analytics/plugins:/opt/airflow/plugins"
      - "D:/Projects/ShopStream Analytics/airflow/dags/medallion_pipeline_dag.py:/opt/airflow/dags/medallion_pipeline_dag.py"
    networks:
      - iot-network

  airflow-webserver:
    image: apache/airflow:3.0.6
    container_name: airflow-webserver-shopstream
    depends_on:
      - airflow-init
    command: api-server
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:2003@host.docker.internal:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_USERS=admin:admin,viewer:viewer
      - AIRFLOW_WWW_USER_USERNAME=${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      - AIRFLOW_WWW_USER_PASSWORD=${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - "D:/Projects/ShopStream Analytics/airflow/dags:/opt/airflow/dags"
      - "D:/Projects/ShopStream Analytics/airflow/dags/simple_test_dag.py:/opt/airflow/dags/simple_test_dag.py"
      - "D:/Projects/ShopStream Analytics/plugins:/opt/airflow/plugins"
      - "D:/Projects/ShopStream Analytics/airflow/dags/medallion_pipeline_dag.py:/opt/airflow/dags/medallion_pipeline_dag.py"


    networks:
      - iot-network
    restart: unless-stopped

  airflow-api:
    image: apache/airflow:3.0.6
    container_name: airflow-api-shopstream
    depends_on:
      - airflow-init
    command: api-server
    ports:
      - "8081:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:2003@host.docker.internal:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_USERS=admin:admin,viewer:viewer
      - AIRFLOW_WWW_USER_USERNAME=${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      - AIRFLOW_WWW_USER_PASSWORD=${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - "D:/Projects/ShopStream Analytics/airflow/dags:/opt/airflow/dags"
      - "D:/Projects/ShopStream Analytics/airflow/dags/simple_test_dag.py:/opt/airflow/dags/simple_test_dag.py"
      - "D:/Projects/ShopStream Analytics/plugins:/opt/airflow/plugins"
      - "D:/Projects/ShopStream Analytics/airflow/dags/medallion_pipeline_dag.py:/opt/airflow/dags/medallion_pipeline_dag.py"
    networks:
      - iot-network
    restart: unless-stopped

  airflow-scheduler:
    image: apache/airflow:3.0.6
    container_name: airflow-scheduler-shopstream
    depends_on:
      - airflow-init
    command: scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:2003@host.docker.internal:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_USERS=admin:admin,viewer:viewer
      - AIRFLOW_WWW_USER_USERNAME=${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      - AIRFLOW_WWW_USER_PASSWORD=${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - "D:/Projects/ShopStream Analytics/airflow/dags:/opt/airflow/dags"
      - "D:/Projects/ShopStream Analytics/airflow/dags/simple_test_dag.py:/opt/airflow/dags/simple_test_dag.py"
      - "D:/Projects/ShopStream Analytics/plugins:/opt/airflow/plugins"
      - "D:/Projects/ShopStream Analytics/airflow/dags/medallion_pipeline_dag.py:/opt/airflow/dags/medallion_pipeline_dag.py"
    networks:
      - iot-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-shopstream
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - iot-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-shopstream
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-shopstream:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-shopstream:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - iot-network
    restart: unless-stopped

  spark-master:
    image: bitnami/spark:4.0.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8082:8080"
    volumes:
      - ./spark:/opt/bitnami/spark/app
    networks:
      - iot-network
    restart: unless-stopped

  spark-worker:
    image: bitnami/spark:4.0.0
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8083:8081"
    volumes:
      - ./spark:/opt/bitnami/spark/app
    networks:
      - iot-network
    restart: unless-stopped

networks:
  iot-network:
    external: true
    name: rt360_network
