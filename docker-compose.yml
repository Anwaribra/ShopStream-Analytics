version: '3'

services:
  airflow-init:
    image: apache/airflow:3.0.6
    container_name: shopstream
    entrypoint: /bin/bash
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:1234@host.docker.internal:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./Airflow/dags:/opt/airflow/dags
      - ./Airflow/logs:/opt/airflow/logs
      - ./Airflow/plugins:/opt/airflow/plugins
      - ./DBT:/opt/airflow/dbt
      - ./ML:/opt/airflow/project/ML
      - ./Kafka:/opt/airflow/project/Kafka
    networks:
      - iot-network

  airflow-webserver:
    image: apache/airflow:3.0.6
    container_name: shopstream
      - airflow-init
    command: api-server
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:1234@host.docker.internal:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./Airflow/dags:/opt/airflow/dags
      - ./Airflow/logs:/opt/airflow/logs
      - ./Airflow/plugins:/opt/airflow/plugins
      - ./DBT:/opt/airflow/dbt
      - ./ML:/opt/airflow/project/ML
      - ./Kafka:/opt/airflow/project/Kafka
    networks:
      - iot-network
    restart: unless-stopped


  airflow-scheduler:
    image: apache/airflow:3.0.6
    container_name: shopstream
      - airflow-init
    command: scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:1234@host.docker.internal:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./Airflow/dags:/opt/airflow/dags
      - ./Airflow/logs:/opt/airflow/logs
      - ./Airflow/plugins:/opt/airflow/plugins
      - ./DBT:/opt/airflow/dbt
      - ./ML:/opt/airflow/project/ML
      - ./Kafka:/opt/airflow/project/Kafka
    networks:
      - iot-network
    restart: unless-stopped



  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: shopstream
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - iot-network
    restart: unless-stopped

  # Kafka message broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: shopstream
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: rt360_zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://nasa_kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - iot-network
    restart: unless-stopped







networks:
  iot-network:
    name: rt360_network
    driver: bridge
